<Application x:Class="Genius.PriceChecker.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:Genius.PriceChecker.UI"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml"/>

                <ResourceDictionary Source="NotifyIconResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Images -->
            <BitmapImage x:Key="Alert32" UriSource="pack://application:,,,/Assets/Alert32.png" />
            <BitmapImage x:Key="Copy16" UriSource="pack://application:,,,/Assets/Copy16.png" />
            <BitmapImage x:Key="DonePink16" UriSource="pack://application:,,,/Assets/DonePink16.png" />
            <BitmapImage x:Key="Error16" UriSource="pack://application:,,,/Assets/Error16.png" />
            <BitmapImage x:Key="Outdated16" UriSource="pack://application:,,,/Assets/Outdated16.png" />
            <BitmapImage x:Key="Plus16" UriSource="pack://application:,,,/Assets/Plus16.png" />
            <BitmapImage x:Key="Refresh16" UriSource="pack://application:,,,/Assets/Refresh16.png" />
            <BitmapImage x:Key="Trash16" UriSource="pack://application:,,,/Assets/Trash16.png" />
            <BitmapImage x:Key="Unknown16" UriSource="pack://application:,,,/Assets/Unknown16.png" />
            <BitmapImage x:Key="Warning16" UriSource="pack://application:,,,/Assets/Warning16.png" />
            <BitmapImage x:Key="Web16" UriSource="pack://application:,,,/Assets/Web16.png" />

            <!-- Animated images -->
            <BitmapImage x:Key="Dance32" UriSource="pack://application:,,,/Assets/Dance32.gif" />
            <BitmapImage x:Key="Loading32" UriSource="pack://application:,,,/Assets/Loading32.gif" />

            <Style x:Key="FormPanelCaption" TargetType="{x:Type Label}">
                <Setter Property="Width" Value="140" />
            </Style>
            <Style x:Key="FormPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Style.Resources>
                    <Style TargetType="{x:Type DockPanel}">
                        <Setter Property="HorizontalAlignment"
                                Value="Stretch" />
                        <Setter Property="Margin"
                                Value="5" />
                        <Setter Property="LastChildFill"
                                Value="True" />
                        <Style.Resources>
                            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource FormPanelCaption}" />
                        </Style.Resources>
                    </Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Margin"
                                Value="5" />
                        <Style.Resources>
                            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource FormPanelCaption}" />
                        </Style.Resources>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="ValidatableCellElementStyle" TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock.DataGrid}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
